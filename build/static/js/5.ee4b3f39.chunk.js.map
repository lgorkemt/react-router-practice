{"version":3,"sources":["components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","history","useHistory","location","useLocation","console","log","quotes","ascending","isAscendingDescending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","path","pathname","list","map","quote","NoQuotesFound","noquotes","AllQuotes","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,mBCA3DD,EAAOC,QAAU,CAAC,SAAW,kC,iFCkBdC,EAhBG,SAACC,GACjB,OACE,qBAAIC,UAAWC,IAAQC,KAAvB,UACE,mCACE,qCACE,4BAAIH,EAAMI,SAEZ,qCAAaJ,EAAMK,YAErB,cAAC,IAAD,CAAMJ,UAAU,MAAMK,GAAE,kBAAaN,EAAMO,IAA3C,iC,wBC2CSC,EAvCG,SAACR,GAEjB,IAAMS,EAAUC,cACVC,EAAWC,cAEjBC,QAAQC,IAAIH,GAEZ,IAjBkBI,EAAQC,EAmBpBC,EAAoD,QAFtC,IAAIC,gBAAgBP,EAASQ,QAEPC,IAAI,QAExCC,GArBYN,EAqBcf,EAAMe,OArBZC,EAqBoBC,EApBvCF,EAAOO,MAAK,SAACC,EAAQC,GAC1B,OAAIR,EACKO,EAAOhB,GAAKiB,EAAOjB,GAAK,GAAK,EAE7BgB,EAAOhB,GAAKiB,EAAOjB,GAAK,GAAK,MAyBxC,OACE,eAAC,WAAD,WACE,qBAAKN,UAAWC,IAAQuB,QAAxB,SACE,yBAAQC,QAVe,WAC3BjB,EAAQkB,KAAK,CACXC,KAAMjB,EAASkB,SACfV,OAAO,SAAD,OAAYF,EAAwB,OAAS,UAOjD,kBAA6CA,EAAwB,YAAc,kBAErF,oBAAIhB,UAAWC,IAAQ4B,KAAvB,SACGT,EAAaU,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEEzB,GAAIyB,EAAMzB,GACVF,OAAQ2B,EAAM3B,OACdD,KAAM4B,EAAM5B,MAHP4B,EAAMzB,a,iBC9BR0B,EAXO,WACpB,OACE,sBAAKhC,UAAWC,IAAQgC,SAAxB,UACE,iDACA,cAAC,IAAD,CAAMjC,UAAU,MAAMK,GAAG,aAAzB,6B,wBCiCS6B,UA/BG,WAChB,MAKIC,YAAQC,KAAc,GAJxBC,EADF,EACEA,YACAC,EAFF,EAEEA,OACMC,EAHR,EAGEC,KACAC,EAJF,EAIEA,MAOF,OAJAC,qBAAU,WACRL,MACC,CAACA,IAEW,YAAXC,EAEA,qBAAKtC,UAAU,WAAf,SACE,cAAC2C,EAAA,EAAD,MAKFF,EACK,qBAAKzC,UAAU,mBAAf,SAAmCyC,IAG7B,cAAXH,GAA4BC,GAAwC,IAAxBA,EAAaK,OAItD,cAAC,EAAD,CAAW9B,OAAQyB,IAHjB,cAAC,EAAD","file":"static/js/5.ee4b3f39.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","import {Link} from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n\n  const history = useHistory();\n  const location = useLocation();\n\n  console.log(location);\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isAscendingDescending = queryParams.get('sort') === 'asc';\n\n  const sortedQuotes = sortQuotes(props.quotes, isAscendingDescending);\n\n  const changeSortingHandler = () =>{\n    history.push({\n      path: location.pathname,\n      search: `?sort=${(isAscendingDescending ? 'desc' : 'asc')}`\n    });\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>Sort {isAscendingDescending ? 'Ascending' : 'Descending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './NoQuotesFound.module.css';\nimport {Link} from 'react-router-dom';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import QuoteList from \"../components/quotes/QuoteList\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport useHttp from \"../hooks/use-http\";\n\nimport { getAllQuotes } from \"../lib/api\";\n\nimport { useEffect } from \"react\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\nconst AllQuotes = () => {\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error,\n  } = useHttp(getAllQuotes, true);\n\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <div className=\"centered focused\">{error}</div>;\n  }\n\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return <NoQuotesFound/>;\n  }\n\n  return <QuoteList quotes={loadedQuotes} />;\n};\n\nexport default AllQuotes;\n"],"sourceRoot":""}