{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","authorInputRef","useRef","textInputRef","useState","isEntered","setIsEntered","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","when","message","location","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,yFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBCgE/BC,EA5DG,SAACL,GACjB,IAAMM,EAAiBC,mBACjBC,EAAeD,mBAErB,EAAkCE,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAqBA,OACE,cAAC,EAAD,UACE,uBACEC,QAXiB,WACrBD,GAAa,IAWTV,UAAWC,IAAQW,KACnBC,SAxBN,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBX,EAAeY,QAAQC,MACvCC,EAAcZ,EAAaU,QAAQC,MAIzCnB,EAAMqB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAa9C,UAKE,cAAC,IAAD,CACEI,KAAMd,EACNe,QAAS,SAACC,GAAD,MACP,wFAGH1B,EAAM2B,WACL,qBAAK1B,UAAWC,IAAQ0B,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK5B,UAAWC,IAAQ4B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK5B,OAEtC,sBAAKL,UAAWC,IAAQ4B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAK1B,OAEpC,qBAAKP,UAAWC,IAAQkC,QAAxB,SACE,wBAAQC,QAhCO,WACrB1B,GAAa,IA+B0BV,UAAU,MAA3C,+B,gBCjCKqC,UAlBE,WACf,MAA8BC,YAAQC,KAA/BC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,OAEdC,EAAUC,cAEhBC,qBAAU,WACK,cAAVH,GACDC,EAAQG,KAAK,aAEd,CAACJ,EAAQC,IAMZ,OAAO,cAAC,EAAD,CAAWhB,UAAsB,YAAXe,EAAsBrB,WAJ3B,SAAA0B,GACtBN,EAAYM","file":"static/js/6.f0b7caad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState } from \"react\";\nimport { Prompt } from \"react-router\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  const [isEntered, setIsEntered] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const onFocusHandler = () => {\n    setIsEntered(true);\n  };\n\n  const finishEntering = () => {\n    setIsEntered(false);\n  };\n  \n  return (\n    <Card>\n      <form\n        onFocus={onFocusHandler}\n        className={classes.form}\n        onSubmit={submitFormHandler}\n      >\n        <Prompt\n          when={isEntered}\n          message={(location) =>\n            \"Are you sure you want to leve the page? All information you entered will be lost! \"\n          }\n        />\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor=\"author\">Author</label>\n          <input type=\"text\" id=\"author\" ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"text\">Text</label>\n          <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={finishEntering} className=\"btn\">Add Quote</button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default QuoteForm;\n","import { useHistory } from 'react-router-dom';\nimport QuoteForm from \"../components/quotes/QuoteForm\";\n\nimport useHttp from \"../hooks/use-http\";\n\nimport {addQuote} from \"../lib/api\";\n\nimport{useEffect} from 'react';\n\nconst NewQuote = () => {\n  const {sendRequest, status} = useHttp(addQuote);\n\n  const history = useHistory();\n\n  useEffect(()=>{\n    if(status ==='completed'){\n      history.push('/quotes');\n    }\n  }, [status, history]);\n\n  const addQuoteHandler = quoteData => {\n    sendRequest(quoteData);\n  };\n  \n  return <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />;\n};\n\nexport default NewQuote;\n"],"sourceRoot":""}